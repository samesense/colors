---
title: "Comparing iTerm2 and Neovim Theme Similarity"
subtitle: "Color palette distance analysis across hundreds of themes"
author: "samesense"
format:
  html:
    toc: true
    toc-depth: 3
    theme: cosmo
    code-fold: true
    df-print: paged
editor: visual
---

## Methods

I compared iTerm2 and Neovim color themes by extracting their palettes from theme files and computing a similarity score:

-   **iTerm2 palettes** were parsed from `.itermcolors` plist files.\

-   **Neovim palettes** were extracted from Lua/Vim files in their repositories.\

-   Colors were standardized and converted to the CIELAB (Lab) color space,\
    which is designed to be more perceptually uniform and closer to human visual differences than raw sRGB distances.\

-   I compare each color in one palette to its closest match in the other, then average those distances in both directions. For Neovim themes with multiple sub-palettes (like Catppuccin), the method naturally highlights whichever sub-theme matches best.

-   This distance was then normalized into a **similarity index (0–1)**, where higher values indicate more similar palettes.\

-   Duplicate theme pairs were collapsed by keeping the maximum similarity score.

The similarity values reported here reflect **perceptual similarity** between palettes rather than raw channel differences.

This heatmap visualizes global similarity patterns. The y-axis has iTerm2 themes, and the x-axis has Neovim themes. On the left you see a cluster of Neovim themes that are less compatible with most iTerm2 themes (lower similarity scores). At the top you see iTerm2 themes that are least compatible with most Neovim themes.

------------------------------------------------------------------------

```{r, include=FALSE}
# Libraries
require(tidyverse)
require(pheatmap)
require(gt)
require(scales)
```

## Results

```{r heatmap, fig.height=35, fig.width=20, echo=FALSE}
af <- '../data/end/comparison_results.tsv'

# Summarize to unique pairs and pivot to wide matrix
mat <- read_tsv(af, show_col_types = FALSE) |>
  select(iterm_name, nvim_name, similarity_index_lab) |>
  group_by(iterm_name, nvim_name) |>
  summarise(similarity_index_lab = max(similarity_index_lab), .groups = "drop") |>
  pivot_wider(names_from = nvim_name, values_from = similarity_index_lab) %>%
  as.data.frame()

rownames(mat) <- mat$iterm_name
mat$iterm_name <- NULL
mat <- as.matrix(mat)

# Column annotation: mean similarity per Neovim theme
col_means <- colMeans(mat, na.rm = TRUE)
annotation_col <- data.frame(mean_similarity = col_means)
rownames(annotation_col) <- colnames(mat)

# Color scale
ann_colors <- list(
  mean_similarity = colorRampPalette(c("red", "yellow", "darkgreen"))(100)
)

# Heatmap
pheatmap(
  mat,
  cluster_rows = TRUE,
  cluster_cols = TRUE,
  scale = "none",
  main = "Similarity Index (higher = better)",
  color = colorRampPalette(c("red", "yellow", "darkgreen"))(100),
  fontsize_row = 6,
  fontsize_col = 6,
  annotation_col = annotation_col,
  annotation_colors = ann_colors
)
```

### Top Tables

```{r topTables, echo=FALSE}
af <- "../data/end/comparison_results.tsv"
dat <- read_tsv(af, show_col_types = FALSE)

# Collapse duplicates
pair_dat <- dat %>%
  group_by(iterm_name, nvim_name) %>%
  summarise(sim = max(similarity_index_lab, na.rm = TRUE), .groups = "drop")

# Summaries
nvim_summary <- pair_dat %>%
  group_by(nvim_name) %>%
  summarise(mean_sim = mean(sim, na.rm = TRUE), .groups = "drop") %>%
  arrange(mean_sim)

iterm_summary <- pair_dat %>%
  group_by(iterm_name) %>%
  summarise(mean_sim = mean(sim, na.rm = TRUE), .groups = "drop") %>%
  arrange(mean_sim)

best_pairs  <- pair_dat %>% arrange(desc(sim)) %>% head(20)
worst_pairs <- pair_dat %>% arrange(sim) %>% head(10)

# helper to color numeric column
colorize <- function(gt_obj, col) {
  gt_obj %>%
    fmt_number(all_of(col), decimals = 3) %>%
    data_color(
      columns = all_of(col),
      fn = scales::col_numeric(c("red","yellow","darkgreen"), domain = c(0,1))
    )
}

top10_nvim <- nvim_summary %>% tail(20) %>%
  arrange(desc(mean_sim)) %>%
  gt() %>%
  tab_header(title = md("**Most Compatible Neovim Themes (mean similarity)**")) %>%
  cols_label(nvim_name = "Neovim Theme", mean_sim = "Mean Similarity") %>%
  colorize("mean_sim")

bottom10_nvim <- nvim_summary %>% head(10) %>%
  gt() %>%
  tab_header(title = md("**Least Compatible Neovim Themes (mean similarity)**")) %>%
  cols_label(nvim_name = "Neovim Theme", mean_sim = "Mean Similarity") %>%
  colorize("mean_sim")

top10_iterm <- iterm_summary %>% tail(20) %>%
  arrange(desc(mean_sim)) %>%
  gt() %>%
  tab_header(title = md("**Most Compatible iTerm Themes (mean similarity)**")) %>%
  cols_label(iterm_name = "iTerm Theme", mean_sim = "Mean Similarity") %>%
  colorize("mean_sim")

bottom10_iterm <- iterm_summary %>% head(10) %>%
  gt() %>%
  tab_header(title = md("**Least Compatible iTerm Themes (mean similarity)**")) %>%
  cols_label(iterm_name = "iTerm Theme", mean_sim = "Mean Similarity") %>%
  colorize("mean_sim")

best_pairs_tbl <- best_pairs %>%
  gt() %>%
  tab_header(title = md("**Top 20 Best Matches (Neovim ↔ iTerm)**")) %>%
  cols_label(iterm_name = "iTerm Theme", nvim_name = "Neovim Theme", sim = "Similarity") %>%
  colorize("sim")

worst_pairs_tbl <- worst_pairs %>%
  gt() %>%
  tab_header(title = md("**Top 10 Worst Matches (Neovim ↔ iTerm)**")) %>%
  cols_label(iterm_name = "iTerm Theme", nvim_name = "Neovim Theme", sim = "Similarity") %>%
  colorize("sim")

top10_nvim
top10_iterm
bottom10_nvim
bottom10_iterm
```

## Recommended Theme Pairings

The following theme pairs represent the **closest visual matches** between iTerm2 and Neovim themes based on visual similarity index. Obvious matches have been mostly filtered out.

These pairings are recommended for users who want a **consistent look across their terminal and editor**, since their palettes are perceptually similar according to CIELAB-based distance metrics.

A higher similarity value (closer to 1.0) indicates a stronger match.

```{r pairs, echo=FALSE}
af <- "../data/end/top50_filtered.tsv"
dat <- read_tsv(af, show_col_types = FALSE)

tab <- dat %>%
  arrange(desc(similarity_index_lab)) %>%
  mutate(
    similarity_index_lab = round(similarity_index_lab, 3)
  ) %>%
  select(iterm_name, nvim_name, nvim_url, similarity_index_lab) %>%
  gt() %>%
  tab_header(
    title = md("**Top 50 Mostly Non-Obvious Matches (iTerm ↔ Neovim)**")
  ) %>%
  cols_label(
    iterm_name = "iTerm Theme",
    nvim_name  = "Neovim Theme",
    nvim_url   = "Neovim Repo URL",
    similarity_index_lab = "Similarity"
  ) %>%
  fmt_url(
    columns = nvim_url,
    label = function(x) gsub("^https?://(?:www\\.)?", "", x),
    show_underline = TRUE
  ) %>%
  fmt_number(columns = similarity_index_lab, decimals = 3) %>%
  data_color(
    columns = similarity_index_lab,
    fn = scales::col_numeric(c("red","yellow","darkgreen"), domain = c(0,1))
  ) %>%
  opt_row_striping() %>%
  tab_source_note(md("Similarity index is scaled 0–1 (higher = better).")) %>%
  tab_options(table.font.size = px(12))

tab
```
